var URL_LEVEL = 'Ad'; // Ad or Keyword
var ONLY_ACTIVE = false; // set to false for all ads or keywords
var CAMPAIGN_LABEL = ''; // set this if you want to only check campaigns with this label
var STRIP_QUERY_STRING = true; // set this to false if the stuff that comes after the question mark is important
var WRAPPED_URLS = true; // set this to true if you use a 3rd party like Marin or Kenshoo for managing you account
// This is the specific text to search for 
// on the page that indicates the item 
// is out of stock.
var LABEL_NAMES = ['"test"'];
var keywords = {};
function cleanUrl(url) {
    if(WRAPPED_URLS) {
        url = url.substr(url.lastIndexOf('http'));
        if(decodeURIComponent(url) !== url) {
            url = decodeURIComponent(url);
        }
    }
    if(STRIP_QUERY_STRING) {
        if(url.indexOf('?')>=0) {
            url = url.split('?')[0];
        }
    }
    if(url.indexOf('{') >= 0) {
        //Let's remove the value track parameters
        url = url.replace(/\{[0-9a-zA-Z]+\}/g,'');
    }
    return url;
}

function buildSelector(camp, url_level) {
    var selector = (url_level === 'Ad') ? camp.ads() : camp.keywords();
    return selector;
}
function main() {
    var campIter = AdWordsApp.campaigns().get();
    while (campIter.hasNext()) {
        var camp = campIter.next();
        var adIter = buildSelector(camp, 'Ad');
      	adIter = adIter.withCondition("CampaignName CONTAINS_IGNORE_CASE 'женская парфюмерия_поиск_тест'")
        //adIter = adIter.withCondition('LabelNames CONTAINS_ANY [' + LABEL_NAMES.join(',') + ']');
        adIter = adIter.get();
        Logger.log(adIter.totalNumEntities());
        while(adIter.hasNext()) {
            var entity = adIter.next();
            var url = entity.urls().getFinalUrl();
            if (url === null)
                continue;
            url = cleanUrl(url);
            try {
                
                Logger.log('Url: '+url+'; Entity: '+entity.getAdGroup().getName());
            } 
            catch(e) {
                Logger.log('There was an issue setting:' + url + ' price , Skipping.');
                continue;
            }
            //Logger.log('Url: '+url+' price is '+prices[url]);

            
        }
    }
}